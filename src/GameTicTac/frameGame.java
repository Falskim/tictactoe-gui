/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GameTicTac;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author AXIOO
 */
public class frameGame extends javax.swing.JFrame {
    /**
     * Creates new form frameGame
     */
    public frameGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameMaster = new javax.swing.JPanel();
        frameBackground = new javax.swing.JPanel();
        watermark = new javax.swing.JLabel();
        mainTitle = new javax.swing.JLabel();
        tbDisableBotNotif = new javax.swing.JToggleButton();
        subFrameMode = new javax.swing.JLayeredPane();
        btModeSinglePlayer = new javax.swing.JButton();
        btModeMultiPlayer = new javax.swing.JButton();
        tfInputNama = new javax.swing.JTextField();
        btKonfirmasiNama = new javax.swing.JButton();
        subFrameGame = new javax.swing.JLayeredPane();
        btAKi = new javax.swing.JButton();
        btAT = new javax.swing.JButton();
        btAKa = new javax.swing.JButton();
        btTKi = new javax.swing.JButton();
        btTT = new javax.swing.JButton();
        btTKa = new javax.swing.JButton();
        btBKi = new javax.swing.JButton();
        btBKa = new javax.swing.JButton();
        btBT = new javax.swing.JButton();
        lbNamaPlayerSatu = new javax.swing.JLabel();
        lbNamaPlayerDua = new javax.swing.JLabel();
        lbLogoPlayerSatu = new javax.swing.JLabel();
        lbLogoPlayerDua = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        subTitle = new javax.swing.JLabel();
        subFrameEnd = new javax.swing.JLayeredPane();
        lbWinner = new javax.swing.JLabel();
        btEndChangeMode = new javax.swing.JButton();
        btEndPlayAgain = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        frameMaster.setBackground(new java.awt.Color(204, 204, 204));
        frameMaster.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        frameMaster.setNextFocusableComponent(frameMaster);
        frameMaster.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                setFrameMaster(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        frameBackground.setBackground(new java.awt.Color(255, 255, 255));
        frameBackground.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        frameBackground.setPreferredSize(new java.awt.Dimension(275, 300));

        watermark.setText("Created by Fawwaz Syiham M");
        watermark.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                watermarkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                watermarkMouseExited(evt);
            }
        });

        mainTitle.setFont(new java.awt.Font("Gill Sans MT", 0, 24)); // NOI18N
        mainTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainTitle.setText("Main Title");

        tbDisableBotNotif.setText("?");
        tbDisableBotNotif.setToolTipText("Disable Bot Notification");
        tbDisableBotNotif.setFocusPainted(false);
        tbDisableBotNotif.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDisableBotNotifMouseClicked(evt);
            }
        });

        subFrameMode.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                setSubFrameMode(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        btModeSinglePlayer.setText("Single Player");
        btModeSinglePlayer.setToolTipText("Bermain Lawan Bot");
        btModeSinglePlayer.setFocusPainted(false);
        btModeSinglePlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btModeSinglePlayerMouseClicked(evt);
            }
        });

        btModeMultiPlayer.setText("Multi Player");
        btModeMultiPlayer.setToolTipText("Bermain Berdua");
        btModeMultiPlayer.setFocusPainted(false);
        btModeMultiPlayer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btModeMultiPlayerMouseClicked(evt);
            }
        });

        tfInputNama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfInputNama.setText("Masukan Nama");
        tfInputNama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tfInputNamaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tfInputNamaMouseExited(evt);
            }
        });

        btKonfirmasiNama.setText("Ok");
        btKonfirmasiNama.setFocusPainted(false);
        btKonfirmasiNama.setFocusable(false);
        btKonfirmasiNama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btKonfirmasiNamaMouseClicked(evt);
            }
        });

        subFrameMode.setLayer(btModeSinglePlayer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameMode.setLayer(btModeMultiPlayer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameMode.setLayer(tfInputNama, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameMode.setLayer(btKonfirmasiNama, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout subFrameModeLayout = new javax.swing.GroupLayout(subFrameMode);
        subFrameMode.setLayout(subFrameModeLayout);
        subFrameModeLayout.setHorizontalGroup(
            subFrameModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameModeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btModeSinglePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfInputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btModeMultiPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subFrameModeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btKonfirmasiNama, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subFrameModeLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btModeMultiPlayer, btModeSinglePlayer});

        subFrameModeLayout.setVerticalGroup(
            subFrameModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameModeLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(subFrameModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btModeMultiPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btModeSinglePlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(btKonfirmasiNama, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        subFrameModeLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btModeMultiPlayer, btModeSinglePlayer});

        subFrameGame.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                subFrameGame(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        btAKi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAKi.setFocusPainted(false);
        btAKi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAKiMouseClicked(evt);
            }
        });

        btAT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAT.setFocusPainted(false);
        btAT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btATMouseClicked(evt);
            }
        });

        btAKa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btAKa.setFocusPainted(false);
        btAKa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btAKaMouseClicked(evt);
            }
        });

        btTKi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btTKi.setFocusPainted(false);
        btTKi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTKiMouseClicked(evt);
            }
        });

        btTT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btTT.setFocusPainted(false);
        btTT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTTMouseClicked(evt);
            }
        });

        btTKa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btTKa.setFocusPainted(false);
        btTKa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTKaMouseClicked(evt);
            }
        });

        btBKi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btBKi.setFocusPainted(false);
        btBKi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBKiMouseClicked(evt);
            }
        });

        btBKa.setToolTipText("");
        btBKa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btBKa.setFocusPainted(false);
        btBKa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBKaMouseClicked(evt);
            }
        });

        btBT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btBT.setFocusPainted(false);
        btBT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btBTMouseClicked(evt);
            }
        });

        lbNamaPlayerSatu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNamaPlayerSatu.setText("Player 1");

        lbNamaPlayerDua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNamaPlayerDua.setText("Player 2");

        lbLogoPlayerSatu.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbLogoPlayerSatu.setText("Logo1");

        lbLogoPlayerDua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbLogoPlayerDua.setText("Logo2");

        subTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        subTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        subTitle.setText("Sub Title");

        subFrameGame.setLayer(btAKi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btAT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btAKa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btTKi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btTT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btTKa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btBKi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btBKa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(btBT, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(lbNamaPlayerSatu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(lbNamaPlayerDua, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(lbLogoPlayerSatu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(lbLogoPlayerDua, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(jSeparator1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(jSeparator3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameGame.setLayer(subTitle, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout subFrameGameLayout = new javax.swing.GroupLayout(subFrameGame);
        subFrameGame.setLayout(subFrameGameLayout);
        subFrameGameLayout.setHorizontalGroup(
            subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameGameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btBKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btTKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addComponent(btAT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addComponent(btTT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btTKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subFrameGameLayout.createSequentialGroup()
                        .addComponent(btBT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btBKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(subFrameGameLayout.createSequentialGroup()
                                .addComponent(lbNamaPlayerSatu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbLogoPlayerSatu))
                            .addGroup(subFrameGameLayout.createSequentialGroup()
                                .addComponent(lbNamaPlayerDua, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbLogoPlayerDua))))
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        subFrameGameLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lbNamaPlayerDua, lbNamaPlayerSatu});

        subFrameGameLayout.setVerticalGroup(
            subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, subFrameGameLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btAKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btAKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btTKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btTT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btTKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btBKi, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBKa, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btBT, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(subFrameGameLayout.createSequentialGroup()
                        .addComponent(subTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNamaPlayerSatu)
                            .addComponent(lbLogoPlayerSatu))
                        .addGap(33, 33, 33)
                        .addGroup(subFrameGameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNamaPlayerDua)
                            .addComponent(lbLogoPlayerDua))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        lbWinner.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbWinner.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbWinner.setText("Output Winner");

        btEndChangeMode.setText("Change Mode");
        btEndChangeMode.setFocusPainted(false);
        btEndChangeMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btEndChangeModeMouseClicked(evt);
            }
        });

        btEndPlayAgain.setText("Play Again");
        btEndPlayAgain.setFocusPainted(false);
        btEndPlayAgain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btEndPlayAgainMouseClicked(evt);
            }
        });

        subFrameEnd.setLayer(lbWinner, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameEnd.setLayer(btEndChangeMode, javax.swing.JLayeredPane.DEFAULT_LAYER);
        subFrameEnd.setLayer(btEndPlayAgain, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout subFrameEndLayout = new javax.swing.GroupLayout(subFrameEnd);
        subFrameEnd.setLayout(subFrameEndLayout);
        subFrameEndLayout.setHorizontalGroup(
            subFrameEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameEndLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(subFrameEndLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btEndPlayAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btEndChangeMode, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        subFrameEndLayout.setVerticalGroup(
            subFrameEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subFrameEndLayout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(lbWinner, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(subFrameEndLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEndChangeMode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btEndPlayAgain, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout frameBackgroundLayout = new javax.swing.GroupLayout(frameBackground);
        frameBackground.setLayout(frameBackgroundLayout);
        frameBackgroundLayout.setHorizontalGroup(
            frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(subFrameMode)
            .addGroup(frameBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(watermark)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbDisableBotNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(mainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(subFrameGame))
            .addGroup(frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(subFrameEnd))
        );
        frameBackgroundLayout.setVerticalGroup(
            frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(watermark, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbDisableBotNotif, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(subFrameMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameBackgroundLayout.createSequentialGroup()
                    .addGap(0, 98, Short.MAX_VALUE)
                    .addComponent(subFrameGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(frameBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameBackgroundLayout.createSequentialGroup()
                    .addGap(0, 70, Short.MAX_VALUE)
                    .addComponent(subFrameEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout frameMasterLayout = new javax.swing.GroupLayout(frameMaster);
        frameMaster.setLayout(frameMasterLayout);
        frameMasterLayout.setHorizontalGroup(
            frameMasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 467, Short.MAX_VALUE)
        );
        frameMasterLayout.setVerticalGroup(
            frameMasterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameMasterLayout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(frameBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        frameBackground.getAccessibleContext().setAccessibleName("");
        frameBackground.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameMaster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameMaster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //<editor-fold defaultstate="collapsed" desc="KODINGAN">
    /**---------------------------------------------------------------------
     *                                                                     *
     *                             KODINGAN                                * 
     *                                                                     *
     ---------------------------------------------------------------------*/    
    /**
     *                             VARIABEL
     */
    String namaSatu="",namaDua="";
    char logoSatu=' ',logoDua=' ';
    String outLogoSatu,outLogoDua; //Yang ditampilkan pada kotak game
    boolean modeSinglePlayer;
    char isiAKi,isiAT,isiAKa;
    char isiTKi,isiTT,isiTKa;
    char isiBKi,isiBT,isiBKa;
    int turn=1,winner=0; //Ganjil=Player1 Genap=Player2/Bot
    boolean gameFinished=false,botTurnPassed,disableBot=false;
    
    /**
     *                              METHOD
     */
    public void showNama(boolean mode){
        modeSinglePlayer=mode;
        btKonfirmasiNama.setVisible(true);
        tfInputNama.setVisible(true);
        tfInputNama.setEnabled(false);
        btModeSinglePlayer.setVisible(false);
        btModeMultiPlayer.setVisible(false);
        mainTitle.setText("Masukan Nama Player 1");
    }
    public void setNama(){
        if(namaSatu.equals("")){
            namaSatu=tfInputNama.getText();
            mainTitle.setText("Masukan Logo "+namaSatu);
            tfInputNama.setText("Masukan Logo");
        }else{
            namaDua=tfInputNama.getText();
            mainTitle.setText("Masukan Logo "+namaDua);
            tfInputNama.setText("Masukan Logo");
        }
    }
    public void setLogo(){
        String temp;
        if(logoSatu==' '){
            temp=tfInputNama.getText();
            logoSatu=temp.charAt(0);
            if(!modeSinglePlayer){
                mainTitle.setText("Masukan Nama Player 2");
                tfInputNama.setText("Masukan Nama");
            }else{
                mainTitle.setText("Masukan Logo Bot");
                tfInputNama.setText("Masukan Logo");
            }
        }else{
            temp=tfInputNama.getText();
            logoDua=temp.charAt(0);
            if(logoDua==logoSatu)
                tfInputNama.setText("Logo Tidak Boleh Sama");
            else
                deleteFrameMode();
        }
    }
    public void deleteFrameMode(){
        mainTitle.setText("Giliran "+namaSatu);
        subFrameMode.setVisible(false);
        subFrameGame.setVisible(true);
        if(modeSinglePlayer)
            tbDisableBotNotif.setVisible(true);
    }
    public void checkWhoWin(){
        if(isiAKi==logoSatu&&isiAT==logoSatu&&isiAKa==logoSatu){
            winner=1;
            gameFinished=true;
            btAKi.setEnabled(true);
            btAKi.setBackground(Color.blue);
            btAT.setEnabled(true);
            btAT.setBackground(Color.blue);
            btAKa.setEnabled(true);
            btAKa.setBackground(Color.blue);
        }else if(isiTKi==logoSatu&&isiTT==logoSatu&&isiTKa==logoSatu){
            winner=1;
            gameFinished=true;
            btTKi.setEnabled(true);
            btTKi.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btTKa.setEnabled(true);
            btTKa.setBackground(Color.blue);
        }else if(isiBKi==logoSatu&&isiBT==logoSatu&&isiBKa==logoSatu){
            winner=1;
            gameFinished=true;
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
            btBT.setEnabled(true);
            btBT.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKi==logoSatu&&isiTKi==logoSatu&&isiBKi==logoSatu){
            winner=1;
            gameFinished=true;
            btAKi.setEnabled(true);
            btAKi.setBackground(Color.blue);
            btTKi.setEnabled(true);
            btTKi.setBackground(Color.blue);
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
        }else if(isiAT==logoSatu&&isiTT==logoSatu&&isiBT==logoSatu){
            winner=1;
            gameFinished=true;
            btAT.setEnabled(true);
            btAT.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBT.setEnabled(true);
            btBT.setBackground(Color.blue);
        }else if(isiAKa==logoSatu&&isiTKa==logoSatu&&isiBKa==logoSatu){
            winner=1;
            gameFinished=true;
            btAKa.setEnabled(true);
            btAKa.setBackground(Color.blue);
            btTKa.setEnabled(true);
            btTKa.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKi==logoSatu&&isiTT==logoSatu&&isiBKa==logoSatu){
            winner=1;
            gameFinished=true;
            btAKi.setEnabled(true);
            btAKi.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKa==logoSatu&&isiTT==logoSatu&&isiBKi==logoSatu){
            winner=1;
            gameFinished=true;
            btAKa.setEnabled(true);
            btAKa.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
        }else if(isiAKi==logoDua&&isiAT==logoDua&&isiAKa==logoDua){
            winner=2;
            gameFinished=true;
            btAKi.setEnabled(true);
            btAKi.setBackground(Color.blue);
            btAT.setEnabled(true);
            btAT.setBackground(Color.blue);
            btAKa.setEnabled(true);
            btAKa.setBackground(Color.blue);
        }else if(isiTKi==logoDua&&isiTT==logoDua&&isiTKa==logoDua){
            winner=2;
            gameFinished=true;
            btTKi.setEnabled(true);
            btTKi.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btTKa.setEnabled(true);
            btTKa.setBackground(Color.blue);
        }else if(isiBKi==logoDua&&isiBT==logoDua&&isiBKa==logoDua){
            winner=2;
            gameFinished=true;
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
            btBT.setEnabled(true);
            btBT.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKi==logoDua&&isiTKi==logoDua&&isiBKi==logoDua){
            winner=2;
            gameFinished=true;
            btAKi.setBackground(Color.blue);
            btTKi.setEnabled(true);
            btTKi.setBackground(Color.blue);
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
        }else if(isiAT==logoDua&&isiTT==logoDua&&isiBT==logoDua){
            winner=2;
            gameFinished=true;
            btAT.setEnabled(true);
            btAT.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBT.setEnabled(true);
            btBT.setBackground(Color.blue);
        }else if(isiAKa==logoDua&&isiTKa==logoDua&&isiBKa==logoDua){
            winner=2;
            gameFinished=true;
            btAKa.setBackground(Color.blue);
            btTKa.setEnabled(true);
            btTKa.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKi==logoDua&&isiTT==logoDua&&isiBKa==logoDua){
            winner=2;
            gameFinished=true;
            btAKi.setEnabled(true);
            btAKi.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBKa.setEnabled(true);
            btBKa.setBackground(Color.blue);
        }else if(isiAKa==logoDua&&isiTT==logoDua&&isiBKi==logoDua){
            winner=2;
            gameFinished=true;
            btAKa.setEnabled(true);
            btAKa.setBackground(Color.blue);
            btTT.setEnabled(true);
            btTT.setBackground(Color.blue);
            btBKi.setEnabled(true);
            btBKi.setBackground(Color.blue);
        }else if(turn>9){
            gameFinished=true;
        }
    }
    public void gameWinCondition(){
        checkWhoWin();
        subTitle.setText("Turn "+turn);
        if(gameFinished){
            subTitle.setText("Turn "+(turn-1));
            JOptionPane.showMessageDialog(null, "Game Berakhir");
            mainTitle.setText("Game Berakhir");
            subFrameGame.setVisible(false);
            tbDisableBotNotif.setVisible(false);
            gameWinner();
            subFrameEnd.setVisible(true);
        }
    }    
    public void gameWinner(){
        switch(winner){
            case 0:
                lbWinner.setText("--- HASILNYA DRAW ---");
                break;
            case 1:
                lbWinner.setText("--- PEMENANGNYA "+namaSatu+" ---");
                break;
            case 2:
                if(modeSinglePlayer){
                    lbWinner.setText("--- ANDA KALAH :v ---");
                }else{
                    lbWinner.setText("-- PEMENANGNYA "+namaDua+" ---");
                }
                break;
        }
    }
    public void botMasterMove(){
        gameWinCondition();
        if(turn>=9)
            return;
        if(!disableBot){
            mainTitle.setText("Giliran Bot");
            subTitle.setText("Turn "+turn);
            JOptionPane.showMessageDialog(null, "Sekarang Giliran Bot");
        }
        botFinisherMove();
        if (!gameFinished){
            if (turn==2&&!botTurnPassed)
                botFirstTurnMove();
            if(!botTurnPassed)
                botCounterMove();
            if(!botTurnPassed)
                botRandomMove();
        }
        turn++;
        mainTitle.setText("Giliran "+namaSatu);
        gameWinCondition();
    }
    public void botFirstTurnMove(){
        botTurnPassed=true;
        if(isiTT==logoSatu){
            isiAKi=logoDua;
            btAKi.setText(outLogoDua);
            btAKi.setEnabled(false);
        }else{
            isiTT=logoDua;
            btTT.setText(outLogoDua);           
            btTT.setEnabled(false);
        }
    }
    public void botCounterMove(){
        botTurnPassed=true;
        if(btAKi.isEnabled()&&(isiAT==logoSatu&& isiAKa==logoSatu || isiTKi==logoSatu&&isiBKi==logoSatu  || isiTT==logoSatu&&isiBKa==logoSatu)){
            isiAKi=logoDua;
            btAKi.setText(outLogoDua);
            btAKi.setEnabled(false);
        }else if(btAT.isEnabled()&&(isiAKi==logoSatu&& isiAKa==logoSatu || isiTT==logoSatu&&isiBT==logoSatu)){
            isiAT=logoDua;
            btAT.setText(outLogoDua);
            btAT.setEnabled(false);
        }else if(btAKa.isEnabled()&&(isiAKi==logoSatu&& isiAT==logoSatu || isiTT==logoSatu&&isiBKi==logoSatu ||isiTKa==logoSatu && isiBKa==logoSatu )){
            isiAKa=logoDua;
            btAKa.setText(outLogoDua);
            btAKa.setEnabled(false);
        }else if(btTKi.isEnabled()&&(isiAKi==logoSatu&& isiBKi==logoSatu || isiTT==logoSatu&&isiTKa==logoSatu)){
            isiTKi=logoDua;
            btTKi.setText(outLogoDua);
            btTKi.setEnabled(false);
        }else if(btTT.isEnabled()&&(isiAKi==logoSatu&& isiBKa==logoSatu || isiAT==logoSatu&&isiBT==logoSatu || isiAKa==logoSatu&& isiBKi==logoSatu || isiTKi==logoSatu&&isiTKa==logoSatu)){
            isiTT=logoDua;
            btTT.setText(outLogoDua);
            btTT.setEnabled(false);
        }else if(btTKa.isEnabled()&&(isiAKa==logoSatu&& isiBKa==logoSatu || isiTT==logoSatu&&isiTKi==logoSatu)){
            isiTKa=logoDua;
            btTKa.setText(outLogoDua);
            btTKa.setEnabled(false);
        }else if(btBKi.isEnabled()&&(isiAKi==logoSatu&& isiTKi==logoSatu || isiTT==logoSatu&&isiAKa==logoSatu || isiBT==logoSatu&&isiBKa==logoSatu)){
            isiBKi=logoDua;
            btBKi.setText(outLogoDua);
            btBKi.setEnabled(false);
        }else if(btBT.isEnabled()&&(isiBKi==logoSatu&& isiBKa==logoSatu || isiTT==logoSatu&&isiAT==logoSatu)){
            isiBT=logoDua;
            btBT.setText(outLogoDua);
            btBT.setEnabled(false);
        }else if(btBKa.isEnabled()&&(isiBKi==logoSatu&& isiBT==logoSatu || isiTT==logoSatu&&isiAKi==logoSatu|| isiAKa==logoSatu&&isiTKa==logoSatu)){
            isiBKa=logoDua;
            btBKa.setText(outLogoDua);
            btBKa.setEnabled(false);
        }else
            botTurnPassed=false;
    }
    public void botFinisherMove(){
        botTurnPassed=true;
        if(btAKi.isEnabled()&&(isiAT==logoDua&&isiAKa==logoDua || isiTKi==logoDua&&isiBKi==logoDua || isiTT==logoDua&&isiBKa==logoDua)){
            isiAKi=logoDua;
            btAKi.setText(outLogoDua);
            btAKi.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btAT.isEnabled()&&(isiAKi==logoDua&&isiAKa==logoDua || isiTT==logoDua&&isiBT==logoDua)){
            isiAT=logoDua;
            btAT.setText(outLogoDua);
            btAT.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btAKa.isEnabled()&&(isiAT==logoDua&&isiAKi==logoDua || isiTKa==logoDua&&isiBKa==logoDua || isiTT==logoDua&&isiBKi==logoDua)){
            isiAKa=logoDua;
            btAKa.setText(outLogoDua);
            btAKa.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btTKi.isEnabled()&&(isiAKi==logoDua&&isiBKi==logoDua || isiTT==logoDua&&isiTKa==logoDua)){
            isiTKi=logoDua;
            btTKi.setText(outLogoDua);
            btTKi.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btTT.isEnabled()&&(isiAKi==logoDua&&isiBKa==logoDua || isiAT==logoDua&&isiBT==logoDua || isiAKa==logoDua&&isiBKi==logoDua || isiTKi==logoDua&&isiTKa==logoDua)){
            isiTT=logoDua;
            btTT.setText(outLogoDua);
            btTT.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btTKa.isEnabled()&&(isiAKa==logoDua&&isiBKa==logoDua || isiTT==logoDua&&isiTKi==logoDua)){
            isiTKa=logoDua;
            btTKa.setText(outLogoDua);
            btTKa.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btBKi.isEnabled()&&(isiBT==logoDua&&isiBKa==logoDua || isiTKi==logoDua&&isiAKi==logoDua || isiTT==logoDua&&isiAKa==logoDua)){
            isiBKi=logoDua;
            btBKi.setText(outLogoDua);
            btBKi.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btBT.isEnabled()&&(isiAT==logoDua&&isiTT==logoDua || isiBKi==logoDua&&isiBKa==logoDua)){
            isiBT=logoDua;
            btBT.setText(outLogoDua);
            btBT.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else if(btBKa.isEnabled()&&(isiBKi==logoDua&&isiBT==logoDua || isiTKa==logoDua&&isiAKa==logoDua || isiTT==logoDua&&isiAKi==logoDua)){
            isiBKa=logoDua;
            btBKa.setText(outLogoDua);
            btBKa.setEnabled(false);
            winner=2;
            gameFinished=true;
        }else
            botTurnPassed=false;
    }
    public void botRandomMove(){
        if(isiAKi==logoDua&& !btAKi.isEnabled()){
            if(btTT.isEnabled()){
                isiTT=logoDua;
                btTT.setText(outLogoDua);
                btTT.setEnabled(false);
            }else if(btBKa.isEnabled()){
                isiBKa=logoDua;
                btBKa.setText(outLogoDua);
                btBKa.setEnabled(false);        
            }else if(btAKa.isEnabled()){
                isiAKa=logoDua;
                btAKa.setText(outLogoDua);
                btAKa.setEnabled(false);
            }else if(btBKi.isEnabled()){
                isiBKi=logoDua;
                btBKi.setText(outLogoDua);
                btBKi.setEnabled(false);
            }else if(btAT.isEnabled()){
                isiAT=logoDua;
                btAT.setText(outLogoDua);
                btAT.setEnabled(false);
            }else if(btTKi.isEnabled()){
                isiTKi=logoDua;
                btTKi.setText(outLogoDua);
                btTKi.setEnabled(false);
            }
        }else if(isiTT==logoDua&& !btTT.isEnabled()){
            if(btAKi.isEnabled()){
                isiAKi=logoDua;
                btAKi.setText(outLogoDua);
                btAKi.setEnabled(false);
            } else if(btAKa.isEnabled()){
                isiAKa=logoDua;
                btAKa.setText(outLogoDua);
                btAKa.setEnabled(false);
            } else if(btBKi.isEnabled()){
                isiBKi=logoDua;
                btBKi.setText(outLogoDua);
                btBKi.setEnabled(false);
            } else if(btBKa.isEnabled()){
                isiBKa=logoDua;
                btBKa.setText(outLogoDua);
                btBKa.setEnabled(false);
            }
        }
    }
    public void resetVariabel(){
        isiAKi=isiAT=isiAKa=isiTKi=isiTT=isiTKa=isiBKi=isiBT=isiBKa=' ';
        turn=1;
        winner=0;
        gameFinished=false;
        botTurnPassed=false;
        btAKi.setEnabled(true);
        btAT.setEnabled(true);
        btAKa.setEnabled(true);
        btTKi.setEnabled(true);
        btTT.setEnabled(true);
        btTKa.setEnabled(true);
        btBKi.setEnabled(true);
        btBT.setEnabled(true);
        btBKa.setEnabled(true);
        btAKi.setBackground(Color.lightGray);
        btAT.setBackground(Color.lightGray);
        btAKa.setBackground(Color.lightGray);
        btTKi.setBackground(Color.lightGray);
        btTT.setBackground(Color.lightGray);
        btTKa.setBackground(Color.lightGray);
        btBKi.setBackground(Color.lightGray);
        btBT.setBackground(Color.lightGray);
        btBKa.setBackground(Color.lightGray);
        btAKi.setText("");
        btAT.setText("");
        btAKa.setText("");
        btTKi.setText("");
        btTT.setText("");
        btTKa.setText("");
        btBKi.setText("");
        btBT.setText("");
        btBKa.setText("");
        tbDisableBotNotif.setVisible(true);
    }
    //</editor-fold>
    private void setSubFrameMode(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_setSubFrameMode
        mainTitle.setText("Pilih Mode Permainan"); 
        tfInputNama.setVisible(false);
        btKonfirmasiNama.setVisible(false);
    }//GEN-LAST:event_setSubFrameMode

    private void btModeSinglePlayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btModeSinglePlayerMouseClicked
        showNama(true);       
    }//GEN-LAST:event_btModeSinglePlayerMouseClicked

    private void btModeMultiPlayerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btModeMultiPlayerMouseClicked
        showNama(false);
    }//GEN-LAST:event_btModeMultiPlayerMouseClicked

    private void btKonfirmasiNamaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btKonfirmasiNamaMouseClicked
        String temp=tfInputNama.getText();
        if(logoSatu==' '){
            if(namaSatu.equals("")){
                if(!temp.equals("Masukan Nama")&&!temp.equals("Mohon Masukan Nama Anda")&&!temp.equals(""))
                    setNama();
                else
                    tfInputNama.setText("Mohon Masukan Nama Anda");
            }else{
                if(!temp.equals("Masukan Logo")&&!temp.equals("Mohon Masukan Logo Anda")&&!temp.equals(""))
                    setLogo();
                else{
                    tfInputNama.setText("Mohon Masukan Logo Anda");
                }
            }
        }else{
            if(!modeSinglePlayer&&namaDua.equals("")){
                if(!temp.equals("Masukan Nama")&&!temp.equals("Mohon Masukan Nama Anda")&&!temp.equals(""))
                    setNama();
                else
                    tfInputNama.setText("Mohon Masukan Nama Anda");
            }else{
                if(!temp.equals("Masukan Logo")&&!temp.equals("Mohon Masukan Logo Anda")&&!temp.equals("Mohon Masukan Logo Bot")&&!temp.equals("Logo Tidak Boleh Sama")&&!temp.equals(""))
                    setLogo();
                else{
                    if(modeSinglePlayer)
                        tfInputNama.setText("Mohon Masukan Logo Bot");
                    else
                        tfInputNama.setText("Mohon Masukan Logo Anda");
                }
            }
        }        
    }//GEN-LAST:event_btKonfirmasiNamaMouseClicked

    private void tfInputNamaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfInputNamaMouseEntered
        String temp=tfInputNama.getText();
        tfInputNama.setEditable(true);
        tfInputNama.setEnabled(true);
        tfInputNama.setBackground(Color.white);
        if(temp.equals("Masukan Nama")||temp.equals("Mohon Masukan Nama Anda")||temp.equals("Masukan Logo")||temp.equals("Mohon Masukan Logo Anda")||temp.equals("Mohon Masukan Logo Bot")||temp.equals("Logo Tidak Boleh Sama")||temp.equals(""))
            tfInputNama.setText("");
    }//GEN-LAST:event_tfInputNamaMouseEntered

    private void setFrameMaster(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_setFrameMaster
        watermark.setForeground(Color.white);
        subFrameGame.setVisible(false);
        subFrameEnd.setVisible(false);
        tbDisableBotNotif.setVisible(false);
    }//GEN-LAST:event_setFrameMaster

    private void watermarkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_watermarkMouseEntered
        watermark.setForeground(Color.black);
    }//GEN-LAST:event_watermarkMouseEntered

    private void watermarkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_watermarkMouseExited
        watermark.setForeground(Color.white);
    }//GEN-LAST:event_watermarkMouseExited

    private void subFrameGame(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_subFrameGame
        logoSatu=Character.toUpperCase(logoSatu);
        logoDua=Character.toUpperCase(logoDua);
        subTitle.setText("Turn "+turn);
        lbNamaPlayerSatu.setText(namaSatu);
        if(modeSinglePlayer)
            lbNamaPlayerDua.setText("Bot");
        else
            lbNamaPlayerDua.setText(namaDua);
        lbLogoPlayerSatu.setText(": "+logoSatu);
        lbLogoPlayerDua.setText(": "+logoDua);
        outLogoSatu=Character.toString(logoSatu);
        outLogoDua=Character.toString(logoDua);
    }//GEN-LAST:event_subFrameGame

    private void btAKiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAKiMouseClicked
        if(btAKi.isEnabled()){
            if(turn%2==1){
                isiAKi=logoSatu;
                btAKi.setText(outLogoSatu);
                turn++;
                btAKi.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiAKi=logoDua;
                btAKi.setText(outLogoDua);
                turn++;
                btAKi.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btAKiMouseClicked

    private void btATMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btATMouseClicked
        if(btAT.isEnabled()){
            if(turn%2==1){
                isiAT=logoSatu;
                btAT.setText(outLogoSatu);
                turn++;
                btAT.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiAT=logoDua;
                btAT.setText(outLogoDua);
                turn++;
                btAT.setEnabled(false);
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btATMouseClicked

    private void btAKaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btAKaMouseClicked
        if(btAKa.isEnabled()){
            if(turn%2==1){
                isiAKa=logoSatu;
                btAKa.setText(outLogoSatu);
                turn++;
                btAKa.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiAKa=logoDua;
                btAKa.setText(outLogoDua);
                turn++;
                btAKa.setEnabled(false);
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btAKaMouseClicked

    private void btTKiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTKiMouseClicked
        if(btTKi.isEnabled()){
            if(turn%2==1){
                isiTKi=logoSatu;
                btTKi.setText(outLogoSatu);
                turn++;
                btTKi.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiTKi=logoDua;
                btTKi.setText(outLogoDua);
                turn++;
                btTKi.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btTKiMouseClicked

    private void btTTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTTMouseClicked
        if(btTT.isEnabled()){
            if(turn%2==1){
                isiTT=logoSatu;
                btTT.setText(outLogoSatu);
                turn++;
                btTT.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiTT=logoDua;
                btTT.setText(outLogoDua);
                turn++;
                btTT.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btTTMouseClicked

    private void btTKaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTKaMouseClicked
        if(btTKa.isEnabled()){
            if(turn%2==1){
                isiTKa=logoSatu;
                btTKa.setText(outLogoSatu);
                turn++;
                btTKa.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiTKa=logoDua;
                btTKa.setText(outLogoDua);
                turn++;
                btTKa.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btTKaMouseClicked

    private void btBKiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBKiMouseClicked
        if(btBKi.isEnabled()){
            if(turn%2==1){
                isiBKi=logoSatu;
                btBKi.setText(outLogoSatu);
                turn++;
                btBKi.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiBKi=logoDua;
                btBKi.setText(outLogoDua);
                turn++;
                btBKi.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btBKiMouseClicked

    private void btBTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBTMouseClicked
        if(btBT.isEnabled()){
            if(turn%2==1){
                isiBT=logoSatu;
                btBT.setText(outLogoSatu);
                turn++;
                btBT.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiBT=logoDua;
                btBT.setText(outLogoDua);
                turn++;
                btBT.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btBTMouseClicked

    private void btBKaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btBKaMouseClicked
        if(btBKa.isEnabled()){
            if(turn%2==1){
                isiBKa=logoSatu;
                btBKa.setText(outLogoSatu);
                turn++;
                btBKa.setEnabled(false);
                gameWinCondition();
                if(modeSinglePlayer&&!gameFinished){
                    botMasterMove();
                }else if(!gameFinished)
                    mainTitle.setText("Giliran "+namaDua);
            }else if(turn%2==0){
                isiBKa=logoDua;
                btBKa.setText(outLogoDua);
                turn++;
                btBKa.setEnabled(false);
                gameWinCondition();
                if(!gameFinished)
                    mainTitle.setText("Giliran "+namaSatu);
            }
        }
    }//GEN-LAST:event_btBKaMouseClicked

    private void tfInputNamaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfInputNamaMouseExited
        tfInputNama.setEditable(false);
        tfInputNama.setEnabled(false);
        String temp=tfInputNama.getText();
        if(temp.equals("")){
            if(logoSatu==' '){
                if(namaSatu.equals("")){
                    tfInputNama.setText("Masukan Nama");
                }else{
                    tfInputNama.setText("Masukan Logo");
                }
            }else{
                if(!modeSinglePlayer&&namaDua.equals("")){
                    tfInputNama.setText("Masukan Nama");
                }else{
                    tfInputNama.setText("Masukan Logo");}
            }
        }
    }//GEN-LAST:event_tfInputNamaMouseExited

    private void btEndPlayAgainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEndPlayAgainMouseClicked
       deleteFrameMode();
       subFrameEnd.setVisible(false);
       resetVariabel();
       if(!modeSinglePlayer)
           tbDisableBotNotif.setVisible(false);
    }//GEN-LAST:event_btEndPlayAgainMouseClicked

    private void btEndChangeModeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btEndChangeModeMouseClicked
       resetVariabel();
       subFrameEnd.setVisible(false);
       namaSatu=namaDua="";
       logoSatu=logoDua=' ';
       subFrameMode.setVisible(true);
       btModeSinglePlayer.setVisible(true);
       btModeMultiPlayer.setVisible(true);
       tbDisableBotNotif.setVisible(false);
       tfInputNama.setText("Masukan Nama");
    }//GEN-LAST:event_btEndChangeModeMouseClicked

    private void tbDisableBotNotifMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDisableBotNotifMouseClicked
        if(tbDisableBotNotif.isSelected()){
            disableBot=true;
        }else
            disableBot=false;
    }//GEN-LAST:event_tbDisableBotNotifMouseClicked
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frameGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frameGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frameGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frameGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frameGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btAKa;
    public javax.swing.JButton btAKi;
    public javax.swing.JButton btAT;
    public javax.swing.JButton btBKa;
    public javax.swing.JButton btBKi;
    public javax.swing.JButton btBT;
    private javax.swing.JButton btEndChangeMode;
    private javax.swing.JButton btEndPlayAgain;
    public javax.swing.JButton btKonfirmasiNama;
    public javax.swing.JButton btModeMultiPlayer;
    public javax.swing.JButton btModeSinglePlayer;
    public javax.swing.JButton btTKa;
    public javax.swing.JButton btTKi;
    public javax.swing.JButton btTT;
    public javax.swing.JPanel frameBackground;
    public javax.swing.JPanel frameMaster;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbLogoPlayerDua;
    private javax.swing.JLabel lbLogoPlayerSatu;
    private javax.swing.JLabel lbNamaPlayerDua;
    private javax.swing.JLabel lbNamaPlayerSatu;
    private javax.swing.JLabel lbWinner;
    public javax.swing.JLabel mainTitle;
    public javax.swing.JLayeredPane subFrameEnd;
    public javax.swing.JLayeredPane subFrameGame;
    public javax.swing.JLayeredPane subFrameMode;
    private javax.swing.JLabel subTitle;
    private javax.swing.JToggleButton tbDisableBotNotif;
    public javax.swing.JTextField tfInputNama;
    public javax.swing.JLabel watermark;
    // End of variables declaration//GEN-END:variables
}
